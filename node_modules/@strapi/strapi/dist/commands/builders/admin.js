"use strict";
const chalk = require("chalk");
const strapiAdmin = require("@strapi/admin");
const strapiUtils = require("@strapi/utils");
const index = require("../../ee/index.js");
const addSlash = require("../../utils/addSlash.js");
const Strapi = require("../../Strapi.js");
const getEnabledPlugins = require("../../core/loaders/plugins/get-enabled-plugins.js");
const _interopDefault = (e) => e && e.__esModule ? e : { default: e };
const chalk__default = /* @__PURE__ */ _interopDefault(chalk);
const strapiAdmin__default = /* @__PURE__ */ _interopDefault(strapiAdmin);
const buildAdmin = async ({ buildDestDir, forceBuild = true, optimization, srcDir }) => {
  const strapiInstance = Strapi({
    // Directories
    appDir: srcDir,
    distDir: buildDestDir,
    // Options
    autoReload: true,
    serveAdminPanel: false
  });
  const plugins = await getEnabledPlugins.getEnabledPlugins(strapiInstance, { client: true });
  const env = strapiInstance.config.get("environment");
  const { serverUrl, adminPath } = strapiUtils.getConfigUrls(strapiInstance.config, true);
  console.log(`Building your admin UI with ${chalk__default.default.green(env)} configuration...`);
  await strapiAdmin__default.default.clean({ appDir: srcDir, buildDestDir });
  index.init(srcDir);
  return strapiAdmin__default.default.build({
    appDir: srcDir,
    buildDestDir,
    // front end build env is always production for now
    env: "production",
    forceBuild,
    plugins,
    optimize: optimization,
    options: {
      backend: serverUrl,
      adminPath: addSlash(adminPath),
      telemetryIsDisabled: strapiInstance.telemetry.isDisabled
    }
  }).then(() => {
    console.log("Admin UI built successfully");
  }).catch((err) => {
    console.error(err);
    process.exit(1);
  });
};
module.exports = buildAdmin;
//# sourceMappingURL=admin.js.map
