{"version":3,"file":"typescript.js","sources":["../../../src/commands/builders/typescript.ts"],"sourcesContent":["import path from 'path';\nimport fs from 'fs-extra';\nimport tsUtils from '@strapi/typescript-utils';\n\nconst cleanupDistDirectory = async (distDir: string) => {\n  if (!(await fs.pathExists(distDir))) {\n    return;\n  }\n\n  const dirContent = await fs.readdir(distDir);\n  const validFilenames = dirContent\n    // Ignore the admin build folder\n    .filter((filename) => filename !== 'build');\n\n  for (const filename of validFilenames) {\n    await fs.remove(path.resolve(distDir, filename));\n  }\n};\n\nexport default async ({\n  srcDir,\n  distDir,\n  ignoreDiagnostics = false,\n}: {\n  srcDir: string;\n  distDir: string;\n  ignoreDiagnostics: boolean;\n}) => {\n  const isTSProject = await tsUtils.isUsingTypeScript(srcDir);\n\n  if (!isTSProject) {\n    throw new Error(`tsconfig file not found in ${srcDir}`);\n  }\n\n  await cleanupDistDirectory(distDir);\n\n  return tsUtils.compile(srcDir, { configOptions: { ignoreDiagnostics } });\n};\n"],"names":["fs","path","tsUtils"],"mappings":";;;;;;;;AAIA,MAAM,uBAAuB,OAAO,YAAoB;AACtD,MAAI,CAAE,MAAMA,aAAAA,QAAG,WAAW,OAAO,GAAI;AACnC;AAAA,EACF;AAEA,QAAM,aAAa,MAAMA,aAAAA,QAAG,QAAQ,OAAO;AAC3C,QAAM,iBAAiB,WAEpB,OAAO,CAAC,aAAa,aAAa,OAAO;AAE5C,aAAW,YAAY,gBAAgB;AACrC,UAAMA,aAAAA,QAAG,OAAOC,cAAA,QAAK,QAAQ,SAAS,QAAQ,CAAC;AAAA,EACjD;AACF;AAEA,MAAA,kBAAe,OAAO;AAAA,EACpB;AAAA,EACA;AAAA,EACA,oBAAoB;AACtB,MAIM;AACJ,QAAM,cAAc,MAAMC,iBAAAA,QAAQ,kBAAkB,MAAM;AAE1D,MAAI,CAAC,aAAa;AAChB,UAAM,IAAI,MAAM,8BAA8B,MAAM,EAAE;AAAA,EACxD;AAEA,QAAM,qBAAqB,OAAO;AAE3B,SAAAA,iBAAAA,QAAQ,QAAQ,QAAQ,EAAE,eAAe,EAAE,qBAAqB;AACzE;;"}