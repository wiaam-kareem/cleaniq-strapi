{"version":3,"file":"index.js","sources":["../../src/commands/index.ts"],"sourcesContent":["import { Command } from 'commander';\n\nimport createAdminUser from './actions/admin/create-user/command';\nimport resetAdminUserPassword from './actions/admin/reset-user-password/command';\nimport buildCommand from './actions/build-command/command'; // in 'build-command' to avoid problems with 'build' being commonly ignored\nimport listComponents from './actions/components/list/command';\nimport configurationDump from './actions/configuration/dump/command';\nimport configurationRestore from './actions/configuration/restore/command';\nimport consoleCommand from './actions/console/command';\nimport listContentTypes from './actions/content-types/list/command';\nimport listControllers from './actions/controllers/list/command';\nimport developCommand from './actions/develop/command';\nimport generateCommand from './actions/generate/command';\nimport listHooks from './actions/hooks/list/command';\nimport installCommand from './actions/install/command';\nimport listMiddlewares from './actions/middlewares/list/command';\nimport newCommand from './actions/new/command';\nimport listPolicies from './actions/policies/list/command';\nimport reportCommand from './actions/report/command';\nimport listRoutes from './actions/routes/list/command';\nimport listServices from './actions/services/list/command';\nimport startCommand from './actions/start/command';\nimport disableTelemetry from './actions/telemetry/disable/command';\nimport enableTelemetry from './actions/telemetry/enable/command';\nimport generateTemplates from './actions/templates/generate/command';\nimport generateTsTypes from './actions/ts/generate-types/command';\nimport uninstallCommand from './actions/uninstall/command';\nimport versionCommand from './actions/version/command';\nimport watchAdminCommand from './actions/watch-admin/command';\nimport buildPluginCommand from './actions/plugin/build-command/command';\nimport watchPluginCommand from './actions/plugin/watch/command';\n\nconst strapiCommands = {\n  createAdminUser,\n  resetAdminUserPassword,\n  buildCommand,\n  listComponents,\n  configurationDump,\n  configurationRestore,\n  consoleCommand,\n  listContentTypes,\n  listControllers,\n  developCommand,\n  generateCommand,\n  listHooks,\n  installCommand,\n  listMiddlewares,\n  newCommand,\n  listPolicies,\n  reportCommand,\n  listRoutes,\n  listServices,\n  startCommand,\n  disableTelemetry,\n  enableTelemetry,\n  generateTemplates,\n  generateTsTypes,\n  uninstallCommand,\n  versionCommand,\n  watchAdminCommand,\n  buildPluginCommand,\n  watchPluginCommand,\n} as const;\n\nconst buildStrapiCommand = (argv: string[], command = new Command()) => {\n  try {\n    // NOTE: this is a hack to allow loading dts commands without make dts a dependency of strapi and thus avoiding circular dependencies\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const dtsCommands = require(require.resolve('@strapi/data-transfer')).commands;\n    Object.assign(strapiCommands, dtsCommands);\n  } catch (e) {\n    // noop\n  }\n\n  // Initial program setup\n  command.storeOptionsAsProperties(false).allowUnknownOption(true);\n\n  // Help command\n  command.helpOption('-h, --help', 'Display help for command');\n  command.addHelpCommand('help [command]', 'Display help for command');\n\n  const keys = Object.keys(strapiCommands) as (keyof typeof strapiCommands)[];\n\n  // Load all commands\n  keys.forEach((name) => {\n    try {\n      // Add this command to the Commander command object\n      strapiCommands[name]({ command, argv });\n    } catch (e) {\n      console.error(`Failed to load command ${name}`, e);\n    }\n  });\n\n  return command;\n};\n\nconst runStrapiCommand = async (argv = process.argv, command = new Command()) => {\n  await buildStrapiCommand(argv, command).parseAsync(argv);\n};\n\nexport { runStrapiCommand, buildStrapiCommand, strapiCommands };\n"],"names":["createAdminUser","resetAdminUserPassword","buildCommand","listComponents","configurationDump","configurationRestore","consoleCommand","listContentTypes","listControllers","developCommand","generateCommand","listHooks","installCommand","listMiddlewares","newCommand","listPolicies","reportCommand","listRoutes","listServices","startCommand","disableTelemetry","enableTelemetry","generateTemplates","generateTsTypes","uninstallCommand","versionCommand","watchAdminCommand","buildPluginCommand","watchPluginCommand","command","Command"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,MAAM,iBAAiB;AAAA,EAAA,iBACrBA;AAAAA,EAAA,wBACAC;AAAAA,EAAA,cACAC;AAAAA,EAAA,gBACAC;AAAAA,EAAA,mBACAC;AAAAA,EAAA,sBACAC;AAAAA,EAAA,gBACAC;AAAAA,EAAA,kBACAC;AAAAA,EAAA,iBACAC;AAAAA,EAAA,gBACAC;AAAAA,EAAA,iBACAC;AAAAA,EAAA,WACAC;AAAAA,EAAA,gBACAC;AAAAA,EAAA,iBACAC;AAAAA,EAAA,YACAC;AAAAA,EAAA,cACAC;AAAAA,EAAA,eACAC;AAAAA,EAAA,YACAC;AAAAA,EAAA,cACAC;AAAAA,EAAA,cACAC;AAAAA,EAAA,kBACAC;AAAAA,EAAA,iBACAC;AAAAA,EAAA,mBACAC;AAAAA,EAAA,iBACAC;AAAAA,EAAA,kBACAC;AAAAA,EAAA,gBACAC;AAAAA,EAAA,mBACAC;AAAAA,EAAA,oBACAC;AAAAA,EAAA,oBACAC;AACF;AAEA,MAAM,qBAAqB,CAAC,MAAgBC,WAAU,IAAIC,wBAAc;AAClE,MAAA;AAGF,UAAM,cAAc,QAAQ,gBAAgB,uBAAuB,CAAC,EAAE;AAC/D,WAAA,OAAO,gBAAgB,WAAW;AAAA,WAClC,GAAG;AAAA,EAEZ;AAGA,EAAAD,SAAQ,yBAAyB,KAAK,EAAE,mBAAmB,IAAI;AAGvD,EAAAA,SAAA,WAAW,cAAc,0BAA0B;AACnD,EAAAA,SAAA,eAAe,kBAAkB,0BAA0B;AAE7D,QAAA,OAAO,OAAO,KAAK,cAAc;AAGlC,OAAA,QAAQ,CAAC,SAAS;AACjB,QAAA;AAEF,qBAAe,IAAI,EAAE,EAAE,SAAAA,UAAS,KAAM,CAAA;AAAA,aAC/B,GAAG;AACV,cAAQ,MAAM,0BAA0B,IAAI,IAAI,CAAC;AAAA,IACnD;AAAA,EAAA,CACD;AAEM,SAAAA;AACT;AAEM,MAAA,mBAAmB,OAAO,OAAO,QAAQ,MAAMA,WAAU,IAAIC,UAAAA,cAAc;AAC/E,QAAM,mBAAmB,MAAMD,QAAO,EAAE,WAAW,IAAI;AACzD;;;;"}